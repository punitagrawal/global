#
# Copyright (c) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2005
#	2007, 2008, 2009, 2010, 2012, 2014, 2015, 2016, 2018
#	Tama Communications Corporation
#
# This file is part of GNU GLOBAL.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# This file is converted to the following files:
#	o command source file (for usage and help).
#	o man format reference manual.
#	o texinfo format reference manual.
#
@HEADER	GTAGS,1,June 2018,GNU Project
@NAME	gtags - create tag files for global
@SYNOPSIS
	@name{gtags} [-ciIOqvw][-d @arg{tag-file}][-f @arg{file}][@arg{dbpath}]
@DESCRIPTION
	@name{Gtags} is used to create tag files for @xref{global,1}.

	@name{Gtags} recursively collects source files under the current directory,
	picks up symbols and writes the cross-reference data into the tag files
	(@file{GTAGS}, @file{GRTAGS} and @file{GPATH}).

	If @file{gtags.files} exists in the current directory
	or a file is specified by the @option{-f} option,
	target files are limited by it. Lines starting with @samp{. } are comments.

	@LANGMAPSTATEMENT@
	Other files are assumed to be text files. Gtags does not treat binary files.
@OPTIONS
	The following options are available:

	@begin_itemize
	@item{@option{--accept-dotfiles}}
		Accept files and directories whose names begin with a dot.
		By default, @name{gtags} ignores them.
	@item{@option{-c}, @option{--compact}}
		Make @file{GTAGS} in compact format.
		This option does not influence @file{GRTAGS},
		because that is always made in compact format.
	@item{@option{--config}[=@arg{name}]}
		Print the value of config variable @arg{name}.
		If @arg{name} is not specified then print all names and values.
		In addition to the variables listed in the ENVIRONMENT section,
		you can refer to install directories by read only variables:
		@var{bindir}, @var{libdir}, @var{datadir}, @var{localstatedir} and @var{sysconfdir}.
	@item{@option{-d}, @option{--dump} @arg{tag-file}}
		Dump a tag file as text to the standard output. Output format is
		'key<tab>data'. This is for debugging.
	@item{@option{--explain}}
		Explain handling files.
	@item{@option{-f}, @option{--file} @arg{file}}
		Give a list of candidates of target files.
		Files which are not on the list are ignored.
		The argument @arg{file} can be set to @val{-} to accept a list of
		files from the standard input.
		File names must be separated by newline.
		To make the list you may use @xref{find,1}, which has rich options
		for selecting files.
	@item{@option{--gtagsconf} @arg{file}}
		Set environment variable @var{GTAGSCONF} to @arg{file}.
	@item{@option{--gtagslabel} @arg{label}}
		Set environment variable @var{GTAGSLABEL} to @arg{label}.
	@item{@option{-I}, @option{--idutils}}
		In addition to tag files, make ID database for @xref{idutils,1}.
	@item{@option{-i}, @option{--incremental}}
		Update tag files incrementally.
		It's better to use @xref{global,1} with the @option{-u} command.
	@item{@option{-O}, @option{--objdir}}
		Use BSD-style obj directory as the location of tag files.
		If @var{GTAGSOBJDIRPREFIX} is set and @file{$GTAGSOBJDIRPREFIX} directory exists,
		@name{gtags} creates @file{$GTAGSOBJDIRPREFIX/<current directory>} directory
		and makes tag files in it.
		Though you can use @var{MAKEOBJDIRPREFIX} instead of @var{GTAGSOBJDIRPREFIX},
		it is deprecated.
		If @arg{dbpath} is specified, this option is ignored.
	@item{@option{--single-update} @arg{file}}
		Update tag files for a single file.
		It is considered that @arg{file} was added, updated or deleted,
		and there is no change in other files.
		This option implies the @option{-i} option.
	@item{@option{--skip-unreadable}}
		Skip unreadable files.
	@item{@option{--skip-symlink} [=@arg{type}]}
		Skip symbolic links. If @arg{type} is 'f' then skip only symbolic links for
		file, else if 'd' then skip only symbolic links for directory.
		The default value of @arg{type} is 'a' (all symbolic links).
	@item{@option{--sqlite3}}
		Use Sqlite 3 API to make tag files. By default, BSD/DB 1.85 API is used.
		To use this option, you need to invoke configure script with
		@option{--with-sqlite3} in the build phase.
	@item{@option{--statistics}}
		Print statistics information.
	@item{@option{-q}, @option{--quiet}}
		Quiet mode.
	@item{@option{-v}, @option{--verbose}}
		Verbose mode.
	@item{@option{-w}, @option{--warning}}
		Print warning messages.
	@item{@arg{dbpath}}
		The directory in which tag files are generated.
		The default is the current directory.
	@end_itemize
@EXAMPLES
	@begin_verbatim
	$ ls -F
	Makefile      src/    lib/
	$ gtags -v
	$ global -x main
	main              10 src/main.c  main (argc, argv) {
	@end_verbatim
@FILES
	@begin_itemize
	@item{@file{GTAGS}}
		Tag file for definitions.
	@item{@file{GRTAGS}}
		Tag file for references.
	@item{@file{GPATH}}
		Tag file for source files.
	@item{@file{gtags.conf}, @file{$HOME/.globalrc}}
		Configuration data for GNU GLOBAL.
		See @xref{gtags.conf,5}.
	@item{@file{gtags.files}}
		The list of candidates of target files.
	@item{@file{.notfunction}}
		The list of symbols which is not a definition.
		If this file exists in the project root directory, @name{gtags} does not
		regard the symbols listed in this file as definitions.
	@end_itemize
@ENVIRONMENT
	The following environment variables affect the execution of @name{gtags}:

	@begin_itemize
	@item{@var{GTAGSCACHE}}
		The size of the B-tree cache. The default is 50000000 (bytes).
	@item{@var{GTAGSCONF}}
		Configuration file.
	@item{@var{GTAGSFORCECPP}}
		If this variable is set, each file whose suffix is @file{.h} is treated
		as a C++ source file.
	@item{@var{GTAGSFORCEENDBLOCK}}
		If this variable is set, each @} at the first column brings end of block
		of 0 level.
	@item{@var{GTAGSLABEL}}
		Configuration label. The default is @val{default}.
	@item{@var{GTAGSLOGGING}}
		If this variable is set, @file{$GTAGSLOGGING} is used as the path name
		of a log file. There is no default value.
	@item{@var{GTAGS_COMMANDLINE}}
		This variable can only be referenced from the hook (see gtags_hook).
		@name{Gtags} sets its own effective command line to this variable before
		calling the hook. Each argument is separated by whitespace, and
		real whitespace is represented as '%20'. This is read only.
	@item{@var{GTAGS_OPTIONS}}
		The value of this variable is inserted in the head of arguments.
	@item{@var{GTAGSOBJDIR}}
		If this variable is set, it is used as the name of BSD-style objdir.
		The default is @file{obj}.
		Though you can use @var{MAKEOBJDIR} instead of @var{GTAGSOBJDIR},
		it is deprecated.
	@item{@var{GTAGSOBJDIRPREFIX}}
		If this variable is set, it is used as the prefix of BSD-style objdir.
		The default is @file{/usr/obj}.
		Though you can use @var{MAKEOBJDIRPREFIX} instead of @var{GTAGSOBJDIRPREFIX},
		it is deprecated.
	@item{@var{TMPDIR}}
		The location used to stored temporary files. The default is @file{/tmp}.
	@end_itemize
@CONFIGURATION
	The following configuration variables affect the execution of @name{gtags}.
	You can see the default value for each variable with the @option{--config} option.

	@begin_itemize
	@item{@code{gtags_parser} (comma separated list)}
		Specify the mapping of language names and plug-in parsers.
		Each part delimited by the comma consists of a language name, a colon,
		the shared object path, an optional colon followed by a function name.
		If the function name is not specified, 'parser' is assumed.
		As a special exception, @name{gtags} collects values
		from multiple @code{gtags_parser} variables.
		For these mappings, the first match is adopted.
	@item{@code{gtags_hook} (command line)}
		Specify a command line which should be executed at the beginning of @name{gtags}
		after loading configuration file. You can use this hook to update
		@file{gtags.files} dynamically.
		"./" in it always means the project root directory, since @name{gtags} is
		always invoked there.
	@item{@code{icase_path} (boolean)}
		Ignore case distinctions in the path.
		Suffixes check is affected by this capability.
	@item{@code{langmap} (comma separated list)}
		Language mapping. Each comma-separated map consists of
		a language name, a colon, and a list of file extensions.
		You can specify a glob pattern surrounded by parentheses instead of an extension
		for the files without extensions (e.g. Make:([Mm]akefile).mak.mk).
		As a special exception, @name{gtags} collects values
		from multiple @code{langmap} variables.
		For these mappings, the first match is adopted.
		Default mapping is:@br
		@samp{@DEFAULTLANGMAP@}.
	@item{@code{skip} (comma separated list)}
		@name{Gtags} skips files and directories which are given in this list.
		As a special exception, @name{gtags} collects values from multiple
		@code{skip} variables.
		If the value ends with @samp{/}, it is assumed as a directory and
		@name{gtags} skips all files under it.
		The value may include glob patterns (*, ?, [...], [!...], [^...]).
		@br
		If the value starts with @samp{/}, it is assumed a relative path name
		from the root directory of the project. You cannot use glob patterns
		for a path name. However, this direction is out-of-date, and is not
		recommended. Instead, you can use @option{-f} option which can be combined with
		@xref{find,1}. Since @xref{find,1} has rich options to select files,
		you can do everything. Additionally, this technique can also be applied
		to any other tagging systems like @xref{ctags,1}, @xref{cscope,1}, etc. 
		@br
		Skip list is also effective when you use the @option{-f} or @file{gtags.files}.
	@end_itemize
@DIAGNOSTICS
	@name{Gtags} exits with a non-0 value if an error occurred, 0 otherwise.

	Note that files created by @name{gtags} with a non-zero exit code should be
	considered corrupted.
@SEE ALSO
	@xref{global,1},
	@xref{htags,1},
	@xref{gtags.conf,5}.

        GNU GLOBAL source code tag system@br
        (http://www.gnu.org/software/global/).
@BUG
	@file{GTAGS} and @file{GRTAGS} are very large.
	In advance of using this command, check the space of your disk.

	Assembly support is far from complete.
	It extracts only @code{ENTRY()} and @code{ALTENTRY()} from source file.
	Probably valid only for FreeBSD and Linux kernel source.

	There is no concurrency control about tag files.
@AUTHOR
	Shigio YAMAGUCHI, Hideki IWAMOTO and others.
@HISTORY
	The @name{gtags} command appeared in FreeBSD 2.2.2.
