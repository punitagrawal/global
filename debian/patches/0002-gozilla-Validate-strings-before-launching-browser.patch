From: Punit Agrawal <punit@debian.org>
Date: Wed, 3 Jan 2018 21:35:38 +0000
Subject: gozilla: Validate strings before launching browser

gozilla does not validate strings before launching the program
specified by the BROWSER environment variable, which might allow
remote attackers to conduct argument-injection attacks via a crafted
URL. This issue is reported as CVE-2017-17531.

Backport a fix for this issue from upstream 6.6.1.
---
 gozilla/gozilla.c | 26 +++++++++++++++++++-------
 1 file changed, 19 insertions(+), 7 deletions(-)

diff --git a/gozilla/gozilla.c b/gozilla/gozilla.c
index 22d2a95..9d53271 100644
--- a/gozilla/gozilla.c
+++ b/gozilla/gozilla.c
@@ -611,7 +611,8 @@ make_url_file(const char *url)
 void
 show_page_by_url(const char *browser, const char *url)
 {
-	char com[1024];
+	STRBUF  *sb = strbuf_open(0);
+	STRBUF  *arg = strbuf_open(0);
 
 	/*
 	 * Browsers which have openURL() command.
@@ -624,22 +625,33 @@ show_page_by_url(const char *browser, const char *url)
 	    locatestring(browser, "netscape", MATCH_AT_LAST) ||
 	    locatestring(browser, "netscape-remote", MATCH_AT_LAST))
 	{
-		snprintf(com, sizeof(com), "%s -remote \"openURL(%s)\"", browser, url);
-		system(com);
+		strbuf_puts(sb, quote_shell(browser));
+		strbuf_putc(sb, ' ');
+		strbuf_puts(sb, "-remote");
+		strbuf_putc(sb, ' ');
+		strbuf_sprintf(arg, "openURL(%s)", url);
+		strbuf_puts(sb, quote_shell(strbuf_value(arg)));
+		system(strbuf_value(sb));
 	}
 	/*
 	 * Load default browser of OSX.
 	 */
 	else if (!strcmp(browser, "osx-default")) {
-		snprintf(com, sizeof(com), "open \"%s\"", make_url_file(url));
-		system(com);
+		strbuf_puts(sb, "open");
+		strbuf_putc(sb, ' ');
+		strbuf_puts(sb, quote_shell(make_url_file(url)));
+		system(strbuf_value(sb));
 	}
 	/*
 	 * Generic browser.
 	 */
 	else {
-		snprintf(com, sizeof(com), "%s \"%s\"", browser, url);
-		system(com);
+		strbuf_puts(sb, quote_shell(browser));
+		strbuf_putc(sb, ' ');
+		strbuf_puts(sb, quote_shell(url));
+		system(strbuf_value(sb));
 	}
+	strbuf_close(sb);
+	strbuf_close(arg);
 }
 #endif
