From: Punit Agrawal <punitagrawal@gmail.com>
Date: Mon, 24 Mar 2014 15:04:20 +0000
Subject: Debianisation of htags

* Change default perl location
* Change .htaccess skeleton filename
* Introduce -C option for generating compressed files
---
 htags/global.cgi.tmpl |  2 +-
 htags/htags.1         |  7 ++++++-
 htags/htags.c         | 29 +++++++++++++++++------------
 htags/manual.in       |  6 +++++-
 4 files changed, 29 insertions(+), 15 deletions(-)

diff --git a/htags/global.cgi.tmpl b/htags/global.cgi.tmpl
index 12472e4..d0cc589 100644
--- a/htags/global.cgi.tmpl
+++ b/htags/global.cgi.tmpl
@@ -1,4 +1,4 @@
-#! /usr/local/bin/perl
+#! /usr/bin/perl
 #------------------------------------------------------------------
 # YOU ARE COMING TO THE DESTINATION ALMOST. PLEASE DO A LITTLE EFFORT.
 #
diff --git a/htags/htags.1 b/htags/htags.1
index bb2cf5b..44b8ad8 100644
--- a/htags/htags.1
+++ b/htags/htags.1
@@ -3,7 +3,7 @@
 .SH NAME
 htags \- generate hypertext from source code.
 .SH SYNOPSIS
-\fBhtags\fP [-acDfFghInosTvwx][-d \fIdbpath\fP][-m \fIname\fP][-S \fIcgidir\fP][-t \fItitle\fP][\fIdir\fP]
+\fBhtags\fP [-acCDfFghInosTvwx][-d \fIdbpath\fP][-m \fIname\fP][-S \fIcgidir\fP][-t \fItitle\fP][\fIdir\fP]
 .br
 .SH DESCRIPTION
 \fBHtags\fP makes hypertext of C, C++, Yacc, Java, PHP and Assembly source code.
@@ -42,6 +42,11 @@ You need to set up a web server so that \fBgzip\fP(1)
 is invoked for each compressed file.
 See \'HTML/.htaccess\' that is generated by htags.
 .TP
+\fB-C\fP
+Make compressed html files with a \fIhtml.gz\fP suffix.
+Debian systems can usually uncompress these transparently
+without the need for a CGI helper.
+.TP
 \fB--cvsweb\fP \fIurl\fP
 Include cvsweb URL. \fIurl\fP is used as base of URL.
 When directory \'CVS\' exists in the root directory of source project,
diff --git a/htags/htags.c b/htags/htags.c
index 231ee78..6eda611 100644
--- a/htags/htags.c
+++ b/htags/htags.c
@@ -98,7 +98,7 @@ char *item_order = "csmdf";
  * options
  */
 int aflag;				/* --alphabet(-a) option	*/
-int cflag;				/* --compact(-c) option		*/
+int cflag;				/* --compact(-c|-C) option	*/
 int fflag;				/* --form(-f) option		*/
 int Fflag;				/* --frame(-F) option		*/
 int gflag;				/* --gtags(-g) option		*/
@@ -231,6 +231,7 @@ int table_flist = 0;			/* file list using table tag	*/
 int colorize_warned_line = 0;		/* colorize warned line		*/
 const char *script_alias = "/cgi-bin";	/* script alias of WWW server	*/
 const char *gzipped_suffix = "ghtml";	/* suffix of gzipped html file	*/
+const char *alt_gz_suffix = "html.gz";	/* suffix of -C compressed file	*/
 const char *normal_suffix = "html";	/* suffix of normal html file	*/
 const char *HTML;
 const char *action = "cgi-bin/global.cgi";/* default action		*/
@@ -1452,7 +1453,7 @@ main(int argc, char **argv)
 	if (htags_options)
 		argv = append_options(&argc, argv);
 
-	while ((optchar = getopt_long(argc, argv, "acd:DfFghIm:noqsS:t:Tvwx", long_options, &option_index)) != EOF) {
+	while ((optchar = getopt_long(argc, argv, "acCd:DfFghIm:noqsS:t:Tvwx", long_options, &option_index)) != EOF) {
 		switch (optchar) {
 		case 0:
 			/* already flags set */
@@ -1491,7 +1492,10 @@ main(int argc, char **argv)
                         aflag++;
                         break;
                 case 'c':
-                        cflag++;
+                        cflag = 'c';
+                        break;
+                case 'C':
+                        cflag = 'C';
                         break;
                 case 'd':
 			strlimcpy(arg_dbpath, optarg, sizeof(arg_dbpath));
@@ -1670,7 +1674,7 @@ main(int argc, char **argv)
 		strlimcpy(dbpath, cwdpath, sizeof(dbpath));
 
 	if (cflag && !usable("gzip")) {
-		warning("'gzip' command not found. -c option ignored.");
+		warning("'gzip' command not found. -%c option ignored.", cflag );
 		cflag = 0;
 	}
 	if (!title) {
@@ -1768,7 +1772,7 @@ main(int argc, char **argv)
 	/*
 	 * check directories
 	 */
-	if (fflag || cflag || dynamic) {
+	if (fflag || cflag == 'c' || dynamic) {
 		if (cgidir && !test("d", cgidir))
 			die("'%s' not found.", cgidir);
 		if (!Sflag) {
@@ -1785,7 +1789,7 @@ main(int argc, char **argv)
 	 *------------------------------------------------------------------
 	 *       HTML/cgi-bin/global.cgi ... CGI program (1)
 	 *       HTML/cgi-bin/ghtml.cgi  ... unzip script (1)
-	 *       HTML/.htaccess          ... skeleton of .htaccess (1)
+	 *       HTML/.htaccess.skel     ... skeleton of .htaccess (1)
 	 *       HTML/help.html          ... help file (2)
 	 *       HTML/R/                 ... references (3)
 	 *       HTML/D/                 ... definitions (3)
@@ -1806,7 +1810,8 @@ main(int argc, char **argv)
 	signal_setup();
 	sethandler(clean);
 
-        HTML = (cflag) ? gzipped_suffix : normal_suffix;
+        HTML = (cflag == 'c') ? gzipped_suffix
+                              : (cflag == 'C') ? alt_gz_suffix : normal_suffix;
 
 	message("[%s] Htags started", now());
 	start_all_time = time(NULL);
@@ -1834,7 +1839,7 @@ main(int argc, char **argv)
 		if (symbol)
 			make_directory_in_distpath(SYMS);
 	}
-	if (cgi && (fflag || cflag || dynamic))
+	if (cgi && (fflag || cflag == 'c' || dynamic))
 		make_directory_in_distpath("cgi-bin");
 	if (Iflag)
 		make_directory_in_distpath("icons");
@@ -1858,9 +1863,9 @@ main(int argc, char **argv)
 	} else {
 		message("[%s] (1) making CGI program ...(skipped)", now());
 	}
-	if (cgi && cflag) {
-		makehtaccess(".htaccess");
-		if (chmod(makepath(distpath, ".htaccess", NULL), 0644) < 0)
+	if (cgi && cflag == 'c') {
+		makehtaccess(".htaccess.skel");
+		if (chmod(makepath(distpath, ".htaccess.skel", NULL), 0644) < 0)
 			die("cannot chmod .htaccess skeleton.");
 		if (cgidir) {
 			makeghtml(cgidir, "ghtml.cgi");
@@ -1985,7 +1990,7 @@ main(int argc, char **argv)
 			message(" Your system may need to be setup to decompress *.%s files.", gzipped_suffix);
 			message(" This can be done by having your browser compiled with the relevant");
 			message(" options, or by configuring your http server to treat these as");
-			message(" gzipped files. (Please see 'HTML/.htaccess')\n");
+			message(" gzipped files. (Please see 'HTML/.htaccess.skel')\n");
 		}
 		if (fflag || dynamic) {
 			const char *format = " You need to setup http server so that %s is executed as a CGI script.";
diff --git a/htags/manual.in b/htags/manual.in
index d32e84d..b14b731 100644
--- a/htags/manual.in
+++ b/htags/manual.in
@@ -25,7 +25,7 @@
 @HEADER	HTAGS,1,March 2008,GNU Project
 @NAME	htags - generate hypertext from source code.
 @SYNOPSIS
-	@name{htags} [-acDfFghInosTvwx][-d @arg{dbpath}][-m @arg{name}][-S @arg{cgidir}][-t @arg{title}][@arg{dir}]
+	@name{htags} [-acCDfFghInosTvwx][-d @arg{dbpath}][-m @arg{name}][-S @arg{cgidir}][-t @arg{title}][@arg{dir}]
 @DESCRIPTION
 	@name{Htags} makes hypertext of C, C++, Yacc, Java, PHP and Assembly source code.
 
@@ -59,6 +59,10 @@
 		You need to set up a web server so that @xref{gzip,1}
 		is invoked for each compressed file.
 		See @file{HTML/.htaccess} that is generated by htags.
+	@item{@option{-C}}
+		Makes compressed html files with a html.gz suffix.
+		Some systems (eg. Debian GNU/Linux) can uncompress these
+		transparently without the need for a CGI helper.
 	@item{@option{--cvsweb} @arg{url}}
 		Include cvsweb URL. @arg{url} is used as base of URL.
 		When directory @file{CVS} exists in the root directory of source project,
